@mixin line-clamp($font-size,
  $line-height,
  $lines-to-show) {
  @if unitless($line-height)==false {
    $line-height: create-unitless-line-height($font-size, $line-height);
  }

  display: block; // Fallback for non-webkit browsers
  display: -webkit-box;
  font-size: $font-size+px;
  max-height: ($font-size * $line-height * $lines-to-show)+px; // Fallback for non-webkit browsers
  line-height: $line-height;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines-to-show;
}

@mixin r($width) {
  @media only screen and (max-width: $width + "px") {
    @content;
  }
}

// @mixin r($width) {
//   @media only screen and (max-width: $width + "px") {
//     @content;
//   }
// }

@mixin l($width) {
  @media screen and (orientation:landscape) and (max-width: $width + "px") {
    @content;
  }
}

@mixin mask($width, $height, $color, $svg) {
  @if $svg == no {
    mask-size: cover;
    mask-position: center;
    mask-repeat: no-repeat;
    background-color: $color;
    width: $width+px;
    height: $height+px;
  }

  @else {
    mask-image: url('../images/sprite.svg#'+$svg+'');
    mask-size: cover;
    mask-position: center;
    mask-repeat: no-repeat;
    background-color: $color;
    width: $width+px;
    height: $height+px;
  }
}